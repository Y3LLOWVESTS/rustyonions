[package]
name = "svc-dht"
version = "0.1.0"
edition = "2021"
license = "MIT OR Apache-2.0"
authors = ["RustyOnions"]
description = "RustyOnions DHT service (Kademlia/Discv5)â€”discovery & providers"
repository = "https://github.com/RustyOnions/RustyOnions"
rust-version = "1.80.0"
build = "build.rs"

[features]
default = ["tls"]
tls = []
arti = []            # Tor/Arti via ron-transport
sled-cache = []      # optional sled-backed cache layer

[dependencies]
tokio = { version = "1.47.0", features = ["rt-multi-thread","macros","signal","time","sync","io-util","net"] }
axum = { version = "0.7.9", features = ["tokio","http1","http2","json"] }
hyper = "1.4"
http = "1.1"
tower = "0.5"
tower-http = { version = "0.6.6", features = ["trace","cors","timeout"] }
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter","fmt","json"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
thiserror = "2.0"
anyhow = "1.0"
bytes = "1.6"
prometheus = "0.14"
once_cell = "1.19"
rand = "0.9"
blake3 = "1.5"
base64 = "0.22"
hex = "0.4"
arc-swap = "1.7"
parking_lot = "0.12"

# RON crates via relative paths (works whether or not workspace.dependencies exists)
ron-kernel    = { path = "../ron-kernel" }
ron-metrics   = { path = "../ron-metrics" }
ron-transport = { path = "../ron-transport" }
ron-proto     = { path = "../ron-proto" }
oap           = { path = "../oap" }

# Optional sled cache
sled = { version = "0.34", optional = true }

[dev-dependencies]
tokio = { version = "1.47.0", features = ["rt-multi-thread","macros","time","sync"] }
reqwest = { version = "0.12", default-features = false, features = ["rustls-tls-native-roots","json"] }
criterion = { version = "0.5", features = ["async_tokio"] }

[[bench]]
name = "lookup_bench"
harness = false

[build-dependencies]
chrono = { version = "0.4", default-features = false, features = ["clock"] }
