[package]
publish = false

name = "ron-kernel"
version = "0.1.0"
edition = "2021"
license = "MIT OR Apache-2.0"
description = "RustyOnions microkernel primitives: supervisor, bus, metrics, transport."

[lib]
name = "ron_kernel"
path = "src/lib.rs"

# Binaries (kept exactly as in your original)
[[bin]]
name = "kernel_demo"
path = "src/bin/kernel_demo.rs"

[[bin]]
name = "node_transport"
path = "src/bin/node_transport.rs"

[[bin]]
name = "transport_supervised"
path = "src/bin/transport_supervised.rs"

[[bin]]
name = "node_index"
path = "src/bin/node_index.rs"

[[bin]]
name = "node_overlay"
path = "src/bin/node_overlay.rs"

[[bin]]
name = "transport_demo"
path = "src/bin/transport_demo.rs"

[[bin]]
name = "transport_load"
path = "src/bin/transport_load.rs"

[[bin]]
name = "kameo_demo"
path = "src/bin/kameo_demo.rs"

[[bin]]
name = "bus_demo"
path = "src/bin/bus_demo.rs"

[[bin]]
name = "metrics_demo"
path = "src/bin/metrics_demo.rs"

[features]
default = []
# Optional actor experiments (leave as-is)
kameo = ["dep:kameo"]
loom = []

[dependencies]
anyhow = "1"
bytes = "1.7"

# Use Rustls (no native-tls). Version + default-features=false come from workspace; features here.
reqwest = { workspace = true, features = ["rustls-tls-native-roots", "json"] }

# Tokio with io-util so AsyncReadExt/AsyncWriteExt (read, write_all, shutdown) are available.
tokio = { workspace = true, features = ["rt-multi-thread", "macros", "signal", "net", "time", "sync", "io-util", "fs"] }

# TLS stack used by transport
tokio-rustls = { workspace = true }

# Axum 0.7: workspace sets default-features=false; we select what we need here.
axum = { workspace = true, features = ["tokio", "http1", "http2", "json"] }

# Tracing / logging
tracing = { workspace = true }
tracing-subscriber = { workspace = true, features = ["env-filter", "fmt"] }

# Prometheus metrics (workspace pin -> 0.14 to pull protobuf >= 3.7.2)
prometheus = { workspace = true }

# Serde + JSON (derive needed for Axum Json<T> handlers / responses)
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }

# Config / file watching (used elsewhere in the repo)
toml = "0.8"
notify = "6"

# Security helpers seen in the tree
zeroize = { version = "1", features = ["derive"] }

# Overlay helpers your bins import
sha2   = { workspace = true }
base64 = { workspace = true }
hex    = { workspace = true }

# Health/metrics use parking_lot::RwLock
parking_lot = { workspace = true }

# Supervisor jitter/backoff uses rand 0.9 (pinned at workspace)
rand = { workspace = true }

# üîê PEM parsing for TLS cert/key
rustls-pemfile = "2"

# Optional kameo dep behind the `kameo` feature
[dependencies.kameo]
path = "../kameo"
optional = true

[dev-dependencies]
tokio = { workspace = true, features = ["rt", "macros"] }
loom = "0.7"
