[package]
name = "svc-omnigate"
version = "0.1.0"
edition = "2021"
license = "MIT OR Apache-2.0"
publish = false
description = "RustyOnions Omnigate (OAP/1 over TCP+TLS) with HELLO, Storage GET streaming (64 KiB), and Mailbox MVP"

[dependencies]
anyhow = { workspace = true }
bytes = { workspace = true }
futures-util = { workspace = true }
http-body-util = "0.1"
hyper = { workspace = true }
hyper-util = { workspace = true }
rand = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
tokio = { version = "1.47.1", features = ["rt-multi-thread","macros","net","io-util","fs","time","signal"] }
tokio-util = { version = "0.7", features = ["codec"] }
tracing = "0.1"
tracing-subscriber = "0.3"
ulid = "1.1"
once_cell = "1"
prometheus = { workspace = true }

# --- TLS stack (explicit provider selection for the server binary)
# We depend on rustls directly and pick the aws-lc-rs backend explicitly.
rustls = { version = "0.23.31", default-features = false, features = ["std", "logging", "tls12", "aws-lc-rs"] }
# Match tokio-rustls to use the same backend; disable its defaults and enable aws_lc_rs/logging/tls12.
tokio-rustls = { version = "0.26.2", default-features = false, features = ["aws_lc_rs", "logging", "tls12"] }
# PEM parsing for loading our leaf cert/key
rustls-pemfile = { workspace = true }

# Reuse OAP types/codec
ron-app-sdk = { path = "../ron-app-sdk" }
workspace-hack = { version = "0.1", path = "../../workspace-hack" }
