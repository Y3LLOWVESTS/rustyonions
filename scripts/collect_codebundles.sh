#!/usr/bin/env bash
# RO:WHAT — Concatenate crate CODEBUNDLE.MD files into ALLCODEBUNDLES.MD at repo root
# RO:WHY  — Docs packaging: single artifact for review or sharing
# RO:INTERACTS — crates/*/CODEBUNDLE.MD → ./ALLCODEBUNDLES.MD
# RO:INVARIANTS — set -euo pipefail; BSD/macOS compatible; clear crate dividers
# RO:SECURITY — No secrets; read-only on crate files; writes root/ALLCODEBUNDLES.MD
# RO:RUN — chmod +x scripts/collect_codebundles.sh && scripts/collect_codebundles.sh

set -euo pipefail

# Resolve repo root even if invoked from subdirs
HERE="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
ROOT="$(cd "$HERE/.." && pwd)"
cd "$ROOT"

OUT="$ROOT/ALLCODEBUNDLES.MD"
TMP="$(mktemp -t allcodebundles.XXXXXX)"

# Canonical beta crates (order preserved)
CRATES=(
  ron-kernel
  ron-bus
  ron-proto
  ron-metrics
  oap
  ron-transport
  ryker
  svc-overlay
  svc-dht
  ron-naming
  ron-storage
  svc-index
  ron-policy
)

# NOTE: If your crate is 'svc-storage' (not 'ron-storage'), change the entry above accordingly.

banner() {
  local title="$1"
  printf '%s\n' "" "" "# ${title}" ""
}

hr() {
  printf '%s\n' "" "" '---' ""
}

# Header
{
  printf '%s\n' "<!-- Generated by scripts/collect_codebundles.sh on $(date -u +"%Y-%m-%dT%H:%M:%SZ") -->"
  printf '%s\n' "# ALLCODEBUNDLES — Beta Crates" ""
  printf '%s\n' "_This file aggregates CODEBUNDLE.MD from beta-complete crates for review/sharing._" ""
  printf '%s\n' "**Included crates (order):**" ""
  for c in "${CRATES[@]}"; do
    printf '%s\n' "- ${c}"
  done
  hr
} > "$TMP"

missing=()
added=()

for crate in "${CRATES[@]}"; do
  path="crates/${crate}/CODEBUNDLE.MD"
  if [[ -f "$path" ]]; then
    banner "$crate" >> "$TMP"
    printf '%s\n' "_Source: ${path}_" "" >> "$TMP"
    cat "$path" >> "$TMP"
    hr >> "$TMP"
    added+=("$crate")
  else
    missing+=("$crate")
  fi
done

mv "$TMP" "$OUT"

printf '%s\n' "Wrote: $OUT"
printf '%s\n' "Included: ${#added[@]} crate(s)"
if ((${#missing[@]} > 0)); then
  printf '%s\n' "Missing CODEBUNDLE.MD for: ${missing[*]}" >&2
  exit 2
fi
